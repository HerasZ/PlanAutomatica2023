(define (domain servicio-emergencia-costes)
    (:requirements :strips :typing :action-costs)
    (:types localizacion caja persona dron brazo contenido contenedor num)
    
    (:predicates
        (loc-contenedor ?l - localizacion ?cont - contenedor)
        (contenido-contenedor ?cont - contenedor ?c - caja )
        (loc-dron ?l - localizacion ?d - dron)
        (loc-caja ?l - localizacion ?c - caja)
        (loc-persona ?l - localizacion ?p - persona)
        (tiene-contenido ?p - persona ?co - contenido)
        (contiene ?c - caja ?co - contenido)
        (carga-brazo ?c - caja ?b - brazo)
        (carga-brazo-contenedor ?cont - contenedor ?b -brazo)
        (libre-brazo ?d - dron ?b - brazo)
        (caja-pendiente ?c - caja)
        (brazos-dron ?d - dron ?b - brazo)
        (base ?l - localizacion)
        (no-base ?l - localizacion)
        (distintos-brazos-dron ?b1 - brazo ?b2 - brazo)
        (capacidad ?n1 - num)
        (mayor ?n1 ?n2 - num)
        (menor ?n1 ?n2 - num)
        (incrementar ?n1 ?n2 - num)
        (tope ?n1 - num)
        (minimo ?n1 - num)
    )
    (:functions
        (coste-total)
        (coste-vuelo ?lorigen ?ldestino - localizacion)
    )
    (:action mover
        :parameters (?desde - localizacion ?hasta - localizacion ?d - dron ?cont - contenedor ?minim ?n1 - num)
        :precondition (and (loc-dron ?desde ?d)
                        (no-base ?hasta)
                        (minimo ?minim)
                        (capacidad ?n1)
                        (mayor ?n1 ?minim))
        :effect (and (loc-dron ?hasta ?d)
                    (not (loc-dron ?desde ?d))
                    (increase (coste-total) (coste-vuelo ?desde ?hasta))
                )
    )
    
    (:action regresar
        :parameters (?desde - localizacion ?hasta - localizacion ?d - dron ?cont - contenedor ?minim - num)
        :precondition (and (loc-dron ?desde ?d)
                        (base ?hasta)
                        (minimo ?minim)
                        (capacidad ?minim))
        :effect (and (loc-dron ?hasta ?d)
                    (not (loc-dron ?desde ?d))
                    (increase (coste-total) (coste-vuelo ?desde ?hasta))
                )
    )
    

    (:action coger-contenedor
        :parameters (?l - localizacion ?d - dron ?bi - brazo ?bd - brazo ?cont - contenedor)
        :precondition (and
                        (distintos-brazos-dron ?bi ?bd)
                        (loc-dron ?l ?d) 
                        (loc-contenedor ?l ?cont)
                        (libre-brazo ?d ?bi) 
                        (libre-brazo ?d ?bd)
                        (brazos-dron ?d ?bi)
                        (brazos-dron ?d ?bd)
                    )
        :effect (and (carga-brazo-contenedor ?cont ?bi)
                    (carga-brazo-contenedor ?cont ?bd) 
                    (not (loc-contenedor ?l ?cont))
                    (not (libre-brazo ?d ?bi))
                    (not (libre-brazo ?d ?bd))
                )
    )
    
    (:action soltar-contenedor
        :parameters (?l - localizacion ?d - dron ?bi ?bd - brazo ?cont - contenedor)
        :precondition (and (loc-dron ?l ?d)
                        (distintos-brazos-dron ?bi ?bd) 
                        (carga-brazo-contenedor ?cont ?bi) 
                        (carga-brazo-contenedor ?cont ?bd)
                        (brazos-dron ?d ?bi)
                        (brazos-dron ?d ?bd)
                    )
        :effect (and (not(carga-brazo-contenedor ?cont ?bi))
                    (not(carga-brazo-contenedor ?cont ?bd)) 
                    (loc-contenedor ?l ?cont)
                    (libre-brazo ?d ?bi)
                    (libre-brazo ?d ?bd)
                )
    )

    (:action cargar-contenedor
        :parameters (?cont - contenedor ?d - dron ?c - caja ?b - brazo ?l - localizacion ?tope ?n1 ?capacidad - num)
        :precondition (and (loc-contenedor ?l ?cont) 
                    (loc-dron ?l ?d)
                    (carga-brazo ?c ?b)
                    (brazos-dron ?d ?b)
                    (base ?l)
                    (tope ?tope)
                    (capacidad ?capacidad)
                    (menor ?n1 ?tope)
                    (incrementar ?capacidad ?n1))
        :effect (and (contenido-contenedor ?cont ?c)
                (not(carga-brazo ?c ?b))
                (not(capacidad ?capacidad))
                (libre-brazo ?d ?b)
                (capacidad ?n1)
                )
    )
    
    (:action descargar-contenedor
        :parameters (?cont - contenedor ?d - dron ?c - caja ?b - brazo ?l - localizacion ?minimo ?n1 ?capacidad - num)
        :precondition (and (loc-contenedor ?l ?cont) 
                    (loc-dron ?l ?d)
                    (contenido-contenedor ?cont ?c)
                    (libre-brazo ?d ?b)
                    (brazos-dron ?d ?b)
                    (minimo ?minimo)
                    (capacidad ?capacidad)
                    (menor ?n1 ?minimo)
                    (incrementar ?n1 ?capacidad)
                    )
        :effect (and (not (contenido-contenedor ?cont ?c))
                (not (libre-brazo ?d ?b))
                (carga-brazo ?c ?b)
                (not(capacidad ?capacidad))
                (capacidad ?n1)
                )   
    )

    (:action dar-caja
        :parameters (?l - localizacion ?c - caja ?d - dron ?p - persona ?b - brazo ?co - contenido)
        :precondition (and (loc-dron ?l ?d) 
                        (brazos-dron ?d ?b) 
                        (carga-brazo ?c ?b) 
                        (contiene ?c ?co) 
                        (loc-persona ?l ?p)
                    )
        :effect (and (loc-caja ?l ?c) 
                    (not (carga-brazo ?c ?b)) 
                    (libre-brazo ?d ?b)
                    (tiene-contenido ?p ?co)
                    (not (caja-pendiente ?c))
                )
    )

    (:action coger-caja
        :parameters (?l - localizacion ?c - caja ?d - dron ?b - brazo)
        :precondition (and (loc-dron ?l ?d) 
                        (loc-caja ?l ?c) 
                        (libre-brazo ?d ?b) 
                        (brazos-dron ?d ?b)
                        (caja-pendiente ?c) 
                    )
        :effect (and (carga-brazo ?c ?b) 
                    (not (loc-caja ?l ?c))
                    (not (libre-brazo ?d ?b))
                )
    )
)